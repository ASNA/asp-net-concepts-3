Using System
Using System.Data
Using System.Configuration
Using System.Collections
Using System.Collections.Generic
Using System.Text.RegularExpressions
Using System.Web
Using System.Web.Security
Using System.Web.UI
Using System.Web.UI.WebControls
Using System.Web.UI.WebControls.WebParts
Using System.Web.UI.HtmlControls
Using ASNA.DataGateHelper

BegClass views_CustomerListSQL Partial(*Yes) Access(*Public) Extends(System.Web.UI.Page)

    DclDB DGDB DBName('*Public/Leyland') 
    
    DclConst PAGE_SIZE Value(12) 

    DclFld StateHelper Type(AppStateHelpers) New(*This.Context) 
    DclFld Customers Type(List(*Of CustomerGridModel)) New()
    DclFld pd Type(PagedData) WithEvents(*Yes)  

    DclFld PageNumber Type(*Integer4) 
    DclFld WhereClause Type(*String) 

    BegSr Page_Load Access(*Private) Event(*This.Load)
        DclSrParm sender Type(*Object)
        DclSrParm e Type(System.EventArgs)

        DGDB.DBName = StateHelper.GetApplicationValue('dbname').ToString()
        *This.Title = 'Customer List'

        *This.PageNumber = (Viewstate['pagenumber'] = *Nothing) ? 1 : Convert.ToInt32(Viewstate['pagenumber']) 

        If Viewstate['whereclause'] <> *Nothing
            *This.WhereClause = Viewstate['whereclause'].ToString()
        EndIf

        If (NOT Page.IsPostBack)
            AddGridViewColumns()
            If  ArePositionToValuesProvided()
                PositionToCustomerNameAndCustomerNumber()
            Else 
                GetAndShowPage()
            EndIf 
        Else
        EndIf
    EndSr

    BegSr OnAfterRowRead Event(pd.AfterRowRead) 
        DclSrParm Sender Type(*Object)
        DclSrParm e Type(ASNA.DataGateHelper.AfterRowReadArgs) 

        DclFld Cust Type(CustomerGridModel) 

        Cust = e.CustomClassInstance *As CustomerGridModel 

        If e.CurrentRowCounter = 1
            SaveRowValuesToLaterRedisplayPageFromHere(Cust)
        EndIf 

        Customers.Add(Cust) 
    EndSr

    BegSr Page_PreRender Access(*Private) Event(*This.PreRender) 
        DclSrParm sender Type(*Object)
        DclSrParm e Type(System.EventArgs)

        buttonPrev.Enabled = (*This.PageNumber > 2) ? *True : *False
        buttonFirst.Enabled = buttonPrev.Enabled

        Viewstate['whereclause'] = *This.WhereClause
        ViewState['pagenumber'] = *This.PageNumber
    EndSr

    BegSr Page_Unload Access(*Private) Event(*This.Unload)
        DclSrParm sender Type(*Object)
        DclSrParm e Type(System.EventArgs)

        Disconnect DGDB 
    EndSr

	BegSr gridviewCust_SelectedIndexChanged Access(*Private) Event(*This.gridviewCust.SelectedIndexChanged)
		DclSrParm sender Type(*Object)
		DclSrParm e Type(System.EventArgs)
		
        DclFld SelectedRow Type(*Integer4) 

        SelectedRow = gridviewCust.SelectedIndex

        DclFld CustomerNumber Type(*Integer4) 
        DclFld CustomerName Type(*String) 

        CustomerNumber = Convert.ToInt32(gridviewCust.DataKeys[SelectedRow]['customer_cmcustno'])
        CustomerName = gridviewCust.DataKeys[SelectedRow]['customer_cmname'].ToString()
	EndSr

    BegSr buttonFirst_Click Access(*Private) Event(*This.buttonFirst.Click)
		DclSrParm sender Type(*Object)
		DclSrParm e Type(System.EventArgs)
		
        *This.WhereClause = *Nothing 
        *This.PageNumber = 1 
            
        GetAndShowPage()
	EndSr

	BegSr buttonNext_Click Access(*Private) Event(*This.buttonNext.Click)
		DclSrParm sender Type(*Object)
		DclSrParm e Type(System.EventArgs)

        GetAndShowPage()
	EndSr

	BegSr buttonPrev_Click Access(*Private) Event(*This.buttonPrev.Click)
		DclSrParm sender Type(*Object)
		DclSrParm e Type(System.EventArgs)

        // The page is always presented with *This.Page set to what the 
        // _next_ page number displayed should be.
        // Displayed     *This.PageNumber   Prev button status
        //    1               2                 *False       
        //    2               3                 *True

        // When *This.PageNumber is 3, page 2 is diplayed. Therefore
        // you need to subtract 2 from *This.PageNumber to show the previous page.

        *This.WhereClause = *Nothing 
        *This.PageNumber -= 2 
                
        GetAndShowPage()
	EndSr

	BegSr buttonPositionTo_Click Access(*Private) Event(*This.buttonPositionTo.Click)
		DclSrParm sender Type(*Object)
		DclSrParm e Type(System.EventArgs)

        If String.IsNullOrEmpty(textboxPositionTo.Text)
            LeaveSr
        EndIf
        
        If textboxPositionTo.Text.Trim().Substring(0,1) = '^'
            textboxPositionTo.Text = Regex.Replace(textboxPositionTo.Text,'\^',String.Empty) 
            *This.WhereClause = String.Format("LOWER(cmname) >= '{0}'", textboxPositionTo.Text.ToLower().Trim())
        Else 
            *This.WhereClause = String.Format("lower(concat(cmcustno,trim(cmname))) LIKE '%{0}%'", textboxPositionTo.Text.ToLower().Trim())
        EndIf 

        textboxPositionTo.Text = String.Empty 
        *This.PageNumber = 1 
        GetAndShowPage() 
	EndSr

	BegSr gridviewCust_RowCommand Access(*Private) Event(*This.gridviewCust.RowCommand)
		DclSrParm sender Type(*Object)
		DclSrParm e Type(System.Web.UI.WebControls.GridViewCommandEventArgs)

        DclFld CommandName    Type(*String)
        DclFld SelectedIndex  Type(*Integer4) 
        DclFld CustomerNumber Type(*Integer4)

        CommandName = e.CommandName
        SelectedIndex = e.CommandArgument.ToString() 
        CustomerNumber = gridviewCust.DataKeys[SelectedIndex]["cmcustno"].ToString()		

        If CommandName = 'ActionEdit'
            Session['customer-number'] = CustomerNumber
            Response.Redirect('customerform.aspx')
        ElseIf CommandName = 'ActionDelete'
            // Do something here for delete action.
        EndIf 
	EndSr

    BegFunc ArePositionToValuesProvided Type(*Boolean) 
        LeaveSr Session['first-customer-name'] <> *Nothing AND +
                Session['first-customer-number'] <> *Nothing
    EndFunc

    BegSr BindGridView 
        gridviewCust.DataBind()

        buttonNext.Enabled = pd.MoreRecords

        labelTableFooter.Text = (buttonNext.Enabled) ? + 
            String.Format("Page {0} - more records to show", *This.PageNumber - 1) : +
            String.Format("Page {0} - no more records to show", *This.PageNumber - 1)
    EndSr 

    BegSr GetAndShowPage
        DclFld Sql Type(*String) 
        DclFld SqlClauses Type(Dictionary (*Of *String, *String)) New()       

        pd = *New PagedData(DGDB, 'rp_data', 'rpzimmie', 'sqlimmed', *TypeOf(CustomerGridModel)) 

        SqlClauses.Add('select', 'cmcustno, cmname')   
        SqlClauses.Add('from', 'examples/cmastnewL2')  
        
        If NOT String.IsNullOrEmpty(*This.WhereClause) 
            SqlClauses.Add('where', *This.WhereClause) 
        EndIf 
        
        SqlClauses.Add('orderby', 'cmname, cmcustno')  

        Sql = PagedData.CreateSql(SqlClauses) 

        pd.WriteThenReadTempFile(PAGE_SIZE, *This.PageNumber, Sql)

        If pd.RowsRead = 0 
             labelTableFooter.Text = 'No rows found to match that query.'
             LeaveSr
        EndIf 
        
        *This.PageNumber += 1

        gridviewCust.DataSource = *This.Customers
        BindGridView()
    EndSr

    BegSr PositionToCustomerNameAndCustomerNumber
        DclFld CustomerName Type(*String) 
        DclFld CustomerNumber Type(*Integer4) 

        CustomerName = StateHelper.GetSessionValueAsString('first-customer-name')
        CustomerNumber = StateHelper.GetSessionValueAsInt32('first-customer-number')

        *This.WhereClause = String.Format("LOWER(CONCAT(LOWER(TRIM(cmname)),cmcustno)) >= '{0}{1}'", +
                                          CustomerName.ToLower().Trim(), CustomerNumber.ToString())
        Viewstate['whereclause'] = *This.WhereClause
        *This.PageNumber = 1 
        GetAndShowPage() 
    EndSr

    BegSr SaveRowValuesToLaterRedisplayPageFromHere
        DclSrParm Cust Type(CustomerGridModel) 

        Session['first-customer-name'] = Cust.CMName
        Session['first-customer-number'] = Cust.CMCustNo
    EndSr

    BegSr AddGridViewColumns
        DclFld bf Type(BoundField) 

        bf = *New BoundField()
        bf.HeaderText = 'Number'
        bf.DataField = 'cmcustno'
        bf.DataFormatString = '{0:00000}'
        bf.ItemStyle.CssClass = 'col-number'
        gridviewCust.Columns.Insert(0, bf)
        
        bf = *New BoundField()
        bf.HeaderText = 'Name'
        bf.DataField = 'cmname'
        bf.ItemStyle.CssClass = 'col-name'
        gridviewCust.Columns.Insert(1, bf) 
    EndSr 

EndClass

BegClass CustomerGridModel Access(*Public) 
    DclProp CMCustNo Type(*Packed) Len(9,0) Access(*Public)
    DclProp CMName Type(*String) Access(*Public)
    DclProp CMState Type(*String) Access(*Public)
EndClass
